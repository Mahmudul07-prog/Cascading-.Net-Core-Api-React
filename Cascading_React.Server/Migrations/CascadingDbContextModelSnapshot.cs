// <auto-generated />
using Cascading_React.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cascading_React.Server.Migrations
{
    [DbContext(typeof(CascadingDbContext))]
    partial class CascadingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cascading_React.Server.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DivisionId = 1,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 2,
                            DivisionId = 1,
                            Name = "San Francisco"
                        },
                        new
                        {
                            Id = 3,
                            DivisionId = 1,
                            Name = "San Diego"
                        },
                        new
                        {
                            Id = 4,
                            DivisionId = 2,
                            Name = "Houston"
                        },
                        new
                        {
                            Id = 5,
                            DivisionId = 2,
                            Name = "Dallas"
                        },
                        new
                        {
                            Id = 6,
                            DivisionId = 2,
                            Name = "Austin"
                        },
                        new
                        {
                            Id = 7,
                            DivisionId = 3,
                            Name = "New York City"
                        },
                        new
                        {
                            Id = 8,
                            DivisionId = 3,
                            Name = "Buffalo"
                        },
                        new
                        {
                            Id = 9,
                            DivisionId = 4,
                            Name = "Miami"
                        },
                        new
                        {
                            Id = 10,
                            DivisionId = 4,
                            Name = "Orlando"
                        },
                        new
                        {
                            Id = 11,
                            DivisionId = 5,
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = 12,
                            DivisionId = 5,
                            Name = "Ottawa"
                        },
                        new
                        {
                            Id = 13,
                            DivisionId = 6,
                            Name = "Montreal"
                        },
                        new
                        {
                            Id = 14,
                            DivisionId = 6,
                            Name = "Quebec City"
                        },
                        new
                        {
                            Id = 15,
                            DivisionId = 7,
                            Name = "Vancouver"
                        },
                        new
                        {
                            Id = 16,
                            DivisionId = 8,
                            Name = "London"
                        },
                        new
                        {
                            Id = 17,
                            DivisionId = 8,
                            Name = "Manchester"
                        },
                        new
                        {
                            Id = 18,
                            DivisionId = 9,
                            Name = "Edinburgh"
                        },
                        new
                        {
                            Id = 19,
                            DivisionId = 9,
                            Name = "Glasgow"
                        },
                        new
                        {
                            Id = 20,
                            DivisionId = 8,
                            Name = "Birmingham"
                        });
                });

            modelBuilder.Entity("Cascading_React.Server.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "United States"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 3,
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Japan"
                        });
                });

            modelBuilder.Entity("Cascading_React.Server.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Divisions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "California"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Florida"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "Ontario"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            Name = "Quebec"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 2,
                            Name = "British Columbia"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 3,
                            Name = "England"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 3,
                            Name = "Scotland"
                        });
                });

            modelBuilder.Entity("Cascading_React.Server.Models.City", b =>
                {
                    b.HasOne("Cascading_React.Server.Models.Division", "Division")
                        .WithMany("Cities")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("Cascading_React.Server.Models.Division", b =>
                {
                    b.HasOne("Cascading_React.Server.Models.Country", "Country")
                        .WithMany("Divisions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Cascading_React.Server.Models.Country", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("Cascading_React.Server.Models.Division", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
